/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- * * The contents of this file are subject to the Netscape Public License * Version 1.0 (the "NPL"); you may not use this file except in * compliance with the NPL.  You may obtain a copy of the NPL at * http://www.mozilla.org/NPL/ * * Software distributed under the NPL is distributed on an "AS IS" basis, * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL * for the specific language governing rights and limitations under the * NPL. * * The Initial Developer of this code under the NPL is Netscape * Communications Corporation.  Portions created by Netscape are * Copyright (C) 1998 Netscape Communications Corporation.  All Rights * Reserved. *//******************************************************************************* * Source date: 9 Apr 1997 21:45:13 GMT * netscape/fonts/nfdlm public interface * Generated by jmc version 1.8 -- DO NOT EDIT ******************************************************************************/#ifndef _Mnfdlm_H_#define _Mnfdlm_H_#include "jmc.h"#ifdef __cplusplusextern "C" {#endif /* __cplusplus *//******************************************************************************* * nfdlm ******************************************************************************//* The type of the nfdlm interface. */struct nfdlmInterface;/* The public type of a nfdlm instance. */typedef struct nfdlm {	const struct nfdlmInterface*	vtable;} nfdlm;/* The inteface ID of the nfdlm interface. */#ifndef JMC_INIT_nfdlm_IDextern EXTERN_C_WITHOUT_EXTERN const JMCInterfaceID nfdlm_ID;#elseEXTERN_C const JMCInterfaceID nfdlm_ID = { 0x3c05681c, 0x011f0f65, 0x7b254505, 0x5573601b };#endif /* JMC_INIT_nfdlm_ID *//******************************************************************************* * nfdlm Operations ******************************************************************************/#define nfdlm_getInterface(self, a, exception)	\	(((self)->vtable->getInterface)(self, nfdlm_getInterface_op, a, exception))#define nfdlm_addRef(self, exception)	\	(((self)->vtable->addRef)(self, nfdlm_addRef_op, exception))#define nfdlm_release(self, exception)	\	(((self)->vtable->release)(self, nfdlm_release_op, exception))#define nfdlm_hashCode(self, exception)	\	(((self)->vtable->hashCode)(self, nfdlm_hashCode_op, exception))#define nfdlm_equals(self, a, exception)	\	(((self)->vtable->equals)(self, nfdlm_equals_op, a, exception))#define nfdlm_clone(self, exception)	\	(((self)->vtable->clone)(self, nfdlm_clone_op, exception))#define nfdlm_toString(self, exception)	\	(((self)->vtable->toString)(self, nfdlm_toString_op, exception))#define nfdlm_finalize(self, exception)	\	(((self)->vtable->finalize)(self, nfdlm_finalize_op, exception))#define nfdlm_SupportsInterface(self, a, exception)	\	(((self)->vtable->SupportsInterface)(self, nfdlm_SupportsInterface_op, a, exception))#define nfdlm_CreateObject(self, a, b, b_length, exception)	\	(((self)->vtable->CreateObject)(self, nfdlm_CreateObject_op, a, b, b_length, exception))#define nfdlm_OnUnload(self, exception)	\	(((self)->vtable->OnUnload)(self, nfdlm_OnUnload_op, exception))/******************************************************************************* * nfdlm Interface ******************************************************************************/struct netscape_jmc_JMCInterfaceID;struct java_lang_Object;struct java_lang_String;struct nfdlmInterface {	void*	(*getInterface)(struct nfdlm* self, jint op, const JMCInterfaceID* a, JMCException* *exception);	void	(*addRef)(struct nfdlm* self, jint op, JMCException* *exception);	void	(*release)(struct nfdlm* self, jint op, JMCException* *exception);	jint	(*hashCode)(struct nfdlm* self, jint op, JMCException* *exception);	jbool	(*equals)(struct nfdlm* self, jint op, void* a, JMCException* *exception);	void*	(*clone)(struct nfdlm* self, jint op, JMCException* *exception);	const char*	(*toString)(struct nfdlm* self, jint op, JMCException* *exception);	void	(*finalize)(struct nfdlm* self, jint op, JMCException* *exception);	jint	(*SupportsInterface)(struct nfdlm* self, jint op, const JMCInterfaceID* a, JMCException* *exception);	void*	(*CreateObject)(struct nfdlm* self, jint op, const JMCInterfaceID* a, void** b, jsize b_length, JMCException* *exception);	jint	(*OnUnload)(struct nfdlm* self, jint op, JMCException* *exception);};/******************************************************************************* * nfdlm Operation IDs ******************************************************************************/typedef enum nfdlmOperations {	nfdlm_getInterface_op,	nfdlm_addRef_op,	nfdlm_release_op,	nfdlm_hashCode_op,	nfdlm_equals_op,	nfdlm_clone_op,	nfdlm_toString_op,	nfdlm_finalize_op,	nfdlm_SupportsInterface_op,	nfdlm_CreateObject_op,	nfdlm_OnUnload_op} nfdlmOperations;/******************************************************************************/#ifdef __cplusplus} /* extern "C" */#endif /* __cplusplus */#endif /* _Mnfdlm_H_ */