/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- * * The contents of this file are subject to the Netscape Public License * Version 1.0 (the "NPL"); you may not use this file except in * compliance with the NPL.  You may obtain a copy of the NPL at * http://www.mozilla.org/NPL/ * * Software distributed under the NPL is distributed on an "AS IS" basis, * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL * for the specific language governing rights and limitations under the * NPL. * * The Initial Developer of this code under the NPL is Netscape * Communications Corporation.  Portions created by Netscape are * Copyright (C) 1998 Netscape Communications Corporation.  All Rights * Reserved. *//******************************************************************************* * Source date: 9 Apr 1997 21:45:12 GMT * netscape/fonts/nffp public interface * Generated by jmc version 1.8 -- DO NOT EDIT ******************************************************************************/#ifndef _Mnffp_H_#define _Mnffp_H_#include "jmc.h"#ifdef __cplusplusextern "C" {#endif /* __cplusplus *//******************************************************************************* * nffp ******************************************************************************//* The type of the nffp interface. */struct nffpInterface;/* The public type of a nffp instance. */typedef struct nffp {	const struct nffpInterface*	vtable;} nffp;/* The inteface ID of the nffp interface. */#ifndef JMC_INIT_nffp_IDextern EXTERN_C_WITHOUT_EXTERN const JMCInterfaceID nffp_ID;#elseEXTERN_C const JMCInterfaceID nffp_ID = { 0x1827292b, 0x1915644a, 0x282f2339, 0x77347420 };#endif /* JMC_INIT_nffp_ID *//******************************************************************************* * nffp Operations ******************************************************************************/#define nffp_getInterface(self, a, exception)	\	(((self)->vtable->getInterface)(self, nffp_getInterface_op, a, exception))#define nffp_addRef(self, exception)	\	(((self)->vtable->addRef)(self, nffp_addRef_op, exception))#define nffp_release(self, exception)	\	(((self)->vtable->release)(self, nffp_release_op, exception))#define nffp_hashCode(self, exception)	\	(((self)->vtable->hashCode)(self, nffp_hashCode_op, exception))#define nffp_equals(self, a, exception)	\	(((self)->vtable->equals)(self, nffp_equals_op, a, exception))#define nffp_clone(self, exception)	\	(((self)->vtable->clone)(self, nffp_clone_op, exception))#define nffp_toString(self, exception)	\	(((self)->vtable->toString)(self, nffp_toString_op, exception))#define nffp_finalize(self, exception)	\	(((self)->vtable->finalize)(self, nffp_finalize_op, exception))#define nffp_LookupFont(self, a, b, c, exception)	\	(((self)->vtable->LookupFont)(self, nffp_LookupFont_op, a, b, c, exception))#define nffp_CreateFontFromFile(self, a, b, c, d, exception)	\	(((self)->vtable->CreateFontFromFile)(self, nffp_CreateFontFromFile_op, a, b, c, d, exception))#define nffp_CreateFontStreamHandler(self, a, b, exception)	\	(((self)->vtable->CreateFontStreamHandler)(self, nffp_CreateFontStreamHandler_op, a, b, exception))#define nffp_EnumerateSizes(self, a, b, exception)	\	(((self)->vtable->EnumerateSizes)(self, nffp_EnumerateSizes_op, a, b, exception))#define nffp_ReleaseFontHandle(self, a, exception)	\	(((self)->vtable->ReleaseFontHandle)(self, nffp_ReleaseFontHandle_op, a, exception))#define nffp_GetMatchInfo(self, a, exception)	\	(((self)->vtable->GetMatchInfo)(self, nffp_GetMatchInfo_op, a, exception))#define nffp_GetRenderableFont(self, a, b, c, exception)	\	(((self)->vtable->GetRenderableFont)(self, nffp_GetRenderableFont_op, a, b, c, exception))#define nffp_Name(self, exception)	\	(((self)->vtable->Name)(self, nffp_Name_op, exception))#define nffp_Description(self, exception)	\	(((self)->vtable->Description)(self, nffp_Description_op, exception))#define nffp_EnumerateMimeTypes(self, exception)	\	(((self)->vtable->EnumerateMimeTypes)(self, nffp_EnumerateMimeTypes_op, exception))#define nffp_ListFonts(self, a, b, exception)	\	(((self)->vtable->ListFonts)(self, nffp_ListFonts_op, a, b, exception))#define nffp_ListSizes(self, a, b, exception)	\	(((self)->vtable->ListSizes)(self, nffp_ListSizes_op, a, b, exception))#define nffp_CacheFontInfo(self, exception)	\	(((self)->vtable->CacheFontInfo)(self, nffp_CacheFontInfo_op, exception))/******************************************************************************* * nffp Interface ******************************************************************************/struct netscape_jmc_JMCInterfaceID;struct java_lang_Object;struct java_lang_String;struct netscape_fonts_nfrc;struct netscape_fonts_nffmi;struct netscape_jmc_ConstCString;struct netscape_fonts_nfstrm;struct netscape_fonts_nfrf;struct nffpInterface {	void*	(*getInterface)(struct nffp* self, jint op, const JMCInterfaceID* a, JMCException* *exception);	void	(*addRef)(struct nffp* self, jint op, JMCException* *exception);	void	(*release)(struct nffp* self, jint op, JMCException* *exception);	jint	(*hashCode)(struct nffp* self, jint op, JMCException* *exception);	jbool	(*equals)(struct nffp* self, jint op, void* a, JMCException* *exception);	void*	(*clone)(struct nffp* self, jint op, JMCException* *exception);	const char*	(*toString)(struct nffp* self, jint op, JMCException* *exception);	void	(*finalize)(struct nffp* self, jint op, JMCException* *exception);	void*	(*LookupFont)(struct nffp* self, jint op, struct nfrc* a, struct nffmi* b, const char* c, JMCException* *exception);	void*	(*CreateFontFromFile)(struct nffp* self, jint op, struct nfrc* a, const char* b, const char* c, const char* d, JMCException* *exception);	struct nfstrm*	(*CreateFontStreamHandler)(struct nffp* self, jint op, struct nfrc* a, const char* b, JMCException* *exception);	void*	(*EnumerateSizes)(struct nffp* self, jint op, struct nfrc* a, void* b, JMCException* *exception);	jint	(*ReleaseFontHandle)(struct nffp* self, jint op, void* a, JMCException* *exception);	struct nffmi*	(*GetMatchInfo)(struct nffp* self, jint op, void* a, JMCException* *exception);	struct nfrf*	(*GetRenderableFont)(struct nffp* self, jint op, struct nfrc* a, void* b, jdouble c, JMCException* *exception);	const char*	(*Name)(struct nffp* self, jint op, JMCException* *exception);	const char*	(*Description)(struct nffp* self, jint op, JMCException* *exception);	const char*	(*EnumerateMimeTypes)(struct nffp* self, jint op, JMCException* *exception);	void*	(*ListFonts)(struct nffp* self, jint op, struct nfrc* a, struct nffmi* b, JMCException* *exception);	void*	(*ListSizes)(struct nffp* self, jint op, struct nfrc* a, struct nffmi* b, JMCException* *exception);	jint	(*CacheFontInfo)(struct nffp* self, jint op, JMCException* *exception);};/******************************************************************************* * nffp Operation IDs ******************************************************************************/typedef enum nffpOperations {	nffp_getInterface_op,	nffp_addRef_op,	nffp_release_op,	nffp_hashCode_op,	nffp_equals_op,	nffp_clone_op,	nffp_toString_op,	nffp_finalize_op,	nffp_LookupFont_op,	nffp_CreateFontFromFile_op,	nffp_CreateFontStreamHandler_op,	nffp_EnumerateSizes_op,	nffp_ReleaseFontHandle_op,	nffp_GetMatchInfo_op,	nffp_GetRenderableFont_op,	nffp_Name_op,	nffp_Description_op,	nffp_EnumerateMimeTypes_op,	nffp_ListFonts_op,	nffp_ListSizes_op,	nffp_CacheFontInfo_op} nffpOperations;/******************************************************************************/#ifdef __cplusplus} /* extern "C" */#endif /* __cplusplus */#endif /* _Mnffp_H_ */